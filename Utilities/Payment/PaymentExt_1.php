<?php/** * Created by PhpStorm. * User: leon-pc * Date: 11/16/2016 * Time: 10:12 AM */function getAllPaymentsIds2($id){    require (REQUIRE_CONNECTION);    $query = "             SELECT                  *            FROM purchases            WHERE ID = $id        ";    try {        $stmt   = $db->prepare($query);        $result = $stmt->execute();    }    catch (PDOException $ex) {        echo $ex;        return null;    }    $ids = array();    while ($data = $stmt->fetch())    {        $ids[] = $data['ID'];    }    rsort($ids);    return $ids;}function getAllPaymentsIds3(){    require (REQUIRE_CONNECTION);    $query = "             SELECT                  *            FROM purchases        ";    try {        $stmt   = $db->prepare($query);        $result = $stmt->execute();    }    catch (PDOException $ex) {        echo $ex;        return null;    }    $ids = array();    while ($data = $stmt->fetch())    {        $ids[] = $data['ID'];    }    rsort($ids);    return $ids;}function getAllPaymentsIddate2($dateB, $dateE){    require (REQUIRE_CONNECTION);    $query1 = "             SELECT                  *            FROM purchases            WHERE (date BETWEEN '$dateB'                AND '$dateE')        ";    try {        $stmt1   = $db->prepare($query1);        $result1 = $stmt1->execute();    }    catch (PDOException $ex) {        echo $ex;        return null;    }    $ids1 = new SplFixedArray(1000);    $num = 0;    while ($data1 = $stmt1->fetch())    {        $ids1[$num] = $data1['ID'];        $num++;    }    //rsort($ids1);    return $ids1;}function getAllPaymentsId2(){    require (REQUIRE_CONNECTION);    $query1 = "             SELECT                  *            FROM purchases        ";    try {        $stmt1   = $db->prepare($query1);        $result1 = $stmt1->execute();    }    catch (PDOException $ex) {        echo $ex;        return null;    }    $ids1 = array();    while ($data1 = $stmt1->fetch())    {        $ids1[] = $data1['ID'];    }    rsort($ids1);    return $ids1;}function getLastPaymentId2(){    $ids = getAllPaymentsId2();    return $ids[0];}function createPayment2($supplier,$descr,$amount,$dept,$ref,$inv_numm,$type,$date){    require (REQUIRE_CONNECTION);    require (REQUIRE_DATE);            $query = "INSERT INTO purchases 	( supplier,descr,amount,department,inv_num,type,ref_num,date) VALUES  	( :supplier, :descr , :amount , :department, :inv_num, :type, :ref_num, :date)";    $query_params = array(        ':supplier' => $supplier,        ':descr' => $descr,        ':amount' => $amount,        ':department' => $dept,        ':inv_num' => $inv_numm,                ':type' => $type,                ':ref_num' => $ref,                ':date' => $date            );    try {        $stmt = $db->prepare($query);        $result = $stmt->execute($query_params);        return true;    }    catch (PDOException $ex) {        echo $ex;        return false;    }}function updateCourseInfo2($id,$array_keys,$array_data){    require (REQUIRE_CONNECTION);    $pos = 0;    foreach ($array_keys as $array_key) {        if($array_data[$pos] == -1 || $array_data[$pos] == null)            continue;        $query = "UPDATE purchases SET $array_key = '" . $array_data[$pos] . "' WHERE ID = '" . $id . "'";        try {            $stmt = $db->prepare($query);            $result = $stmt->execute();        } catch (PDOException $ex) {            echo $ex;        }        $pos++;    }    return true;}function deletePayment2($id){    require (REQUIRE_CONNECTION);    $query = "DELETE FROM purchases WHERE ID =  '". $id."'";    try {        $stmt = $db->prepare($query);        $result = $stmt->execute();        return true;    }    catch (PDOException $ex) {        echo $ex;        return false;    }}